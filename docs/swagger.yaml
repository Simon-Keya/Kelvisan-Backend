openapi: 3.0.0
info:
  title: Kelvisan API
  version: 1.0.0
  description: API documentation for Kelvisan Backend (Products, Auth, Newsletter)

servers:
  - url: http://localhost:5000/api
    description: Local development server

paths:
  /auth/login:
    post:
      summary: Admin login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /auth/register:
    post:
      summary: Register a new admin
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Admin registered successfully
        '409':
          description: Admin already exists

  /auth/reset-password:
    post:
      summary: Reset admin password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - newPassword
              properties:
                email:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
        '404':
          description: Admin not found

  /newsletter/subscribe:
    post:
      summary: Subscribe to newsletter
      tags:
        - Newsletter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '201':
          description: Subscribed successfully
        '400':
          description: Invalid email

  /newsletter:
    get:
      summary: Get all newsletter subscribers
      tags:
        - Newsletter
      responses:
        '200':
          description: List of subscribers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    subscribed_at:
                      type: string
                      format: date-time

  /products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

    put:
      summary: Update a product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

    delete:
      summary: Delete a product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
        '404':
          description: Product not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image:
          type: string
          description: URL or path to the product image
        description:
          type: string
        price:
          type: number
          format: float
        created_at:
          type: string
          format: date-time

    ProductInput:
      type: object
      required:
        - name
        - image
        - description
        - price
      properties:
        name:
          type: string
        image:
          type: string
          description: URL or path to the product image
        description:
          type: string
        price:
          type: number
          format: float
